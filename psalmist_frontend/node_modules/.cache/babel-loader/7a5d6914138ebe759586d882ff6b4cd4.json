{"ast":null,"code":"var _jsxFileName = \"/Users/joselaro/Documents/Documents - Jose\\u2019s MacBook Pro (2)/J.Laro/the-psalmist-app/psalmist_frontend/client/src/songs/EditSongModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { addSong } from \"../actions/songs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditSongModal = ({\n  current,\n  updateSong\n}) => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [intro, setIntro] = useState(\"\");\n  const [verse, setVerse] = useState(\"\");\n  const [chorus, setChorus] = useState(\"\");\n};\n\n_s(EditSongModal, \"OxiYTT+c0zOJVJ0yOE85e34wHnc=\");\n\n_c = EditSongModal;\n\nconst onSubmit = () => {\n  if (title === \"\") {\n    M.toast({\n      html: \"What is the title of your Song?\"\n    });\n  } else {\n    const newSong = {\n      title,\n      intro,\n      verse,\n      chorus,\n      date: new Date()\n    };\n    addSong(newSong);\n    M.toast({\n      html: `${title} was added`\n    }); //clear fields\n\n    setTitle(\"\");\n    setIntro(\"\");\n    setVerse(\"\");\n    setChorus(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-song-modal\",\n    className: \"modal\",\n    style: {\n      width: \"50%\",\n      height: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"active\",\n            children: \"Song Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"intro\",\n            value: intro,\n            onChange: e => setIntro(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"intro\",\n            className: \"active\",\n            children: \"Intro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"verse\",\n            value: verse,\n            onChange: e => setVerse(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"verse\",\n            className: \"active\",\n            children: \"Verse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"chorus\",\n            value: chorus,\n            onChange: e => setChorus(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"chorus\",\n            className: \"active\",\n            children: \"Chorus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"'#!\",\n        onClick: onSubmit,\n        className: \"modal-close waves-effect green btn\",\n        children: \" ENTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nEditSongModal.propTypes = {\n  addSong: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  updateSong\n})(EditSongModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSongModal\");","map":{"version":3,"sources":["/Users/joselaro/Documents/Documents - Joseâ€™s MacBook Pro (2)/J.Laro/the-psalmist-app/psalmist_frontend/client/src/songs/EditSongModal.js"],"names":["React","useState","connect","PropTypes","M","addSong","EditSongModal","current","updateSong","title","setTitle","intro","setIntro","verse","setVerse","chorus","setChorus","onSubmit","toast","html","newSong","date","Date","width","height","e","target","value","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,4CAAd;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AAAA;;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACD,CALD;;GAAMK,a;;KAAAA,a;;AAON,MAAMW,QAAQ,GAAG,MAAM;AACrB,MAAIR,KAAK,KAAK,EAAd,EAAkB;AAChBL,IAAAA,CAAC,CAACc,KAAF,CAAQ;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAR;AACD,GAFD,MAEO;AACL,UAAMC,OAAO,GAAG;AACdX,MAAAA,KADc;AAEdE,MAAAA,KAFc;AAGdE,MAAAA,KAHc;AAIdE,MAAAA,MAJc;AAKdM,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AALQ,KAAhB;AAQAjB,IAAAA,OAAO,CAACe,OAAD,CAAP;AACAhB,IAAAA,CAAC,CAACc,KAAF,CAAQ;AAAEC,MAAAA,IAAI,EAAG,GAAEV,KAAM;AAAjB,KAAR,EAVK,CAYL;;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD;;AAED,sBACE;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAHT;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAEf,KAHT;AAIE,YAAA,QAAQ,EAAGgB,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAuB,YAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAgBE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAEhB,KAHT;AAIE,YAAA,QAAQ,EAAGc,CAAD,IAAOb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAuB,YAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF,eA6BE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAEd,KAHT;AAIE,YAAA,QAAQ,EAAGY,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAuB,YAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7BF,eA0CE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAEZ,MAHT;AAIE,YAAA,QAAQ,EAAGU,CAAD,IAAOT,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAO,YAAA,OAAO,EAAC,QAAf;AAAwB,YAAA,SAAS,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eA6DE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,OAAO,EAAEV,QAFX;AAGE,QAAA,SAAS,EAAC,oCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuED,CA7FD;;AA8FAX,aAAa,CAACsB,SAAd,GAA0B;AACxBvB,EAAAA,OAAO,EAAEF,SAAS,CAAC0B,IAAV,CAAeC;AADA,CAA1B;AAIA,eAAe5B,OAAO,CAAC,IAAD,EAAO;AAAEM,EAAAA;AAAF,CAAP,CAAP,CAA8BF,aAA9B,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { addSong } from \"../actions/songs\";\n\nconst EditSongModal = ({ current, updateSong }) => {\n  const [title, setTitle] = useState(\"\");\n  const [intro, setIntro] = useState(\"\");\n  const [verse, setVerse] = useState(\"\");\n  const [chorus, setChorus] = useState(\"\");\n};\n\nconst onSubmit = () => {\n  if (title === \"\") {\n    M.toast({ html: \"What is the title of your Song?\" });\n  } else {\n    const newSong = {\n      title,\n      intro,\n      verse,\n      chorus,\n      date: new Date(),\n    };\n\n    addSong(newSong);\n    M.toast({ html: `${title} was added` });\n\n    //clear fields\n    setTitle(\"\");\n    setIntro(\"\");\n    setVerse(\"\");\n    setChorus(\"\");\n  }\n\n  return (\n    <div\n      id=\"edit-song-modal\"\n      className=\"modal\"\n      style={{ width: \"50%\", height: \"auto\" }}\n    >\n      <div className=\"modal-content\">\n        <h4>Songs</h4>\n        <br />\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <label htmlFor=\"title\" className=\"active\">\n              Song Title\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"intro\"\n              value={intro}\n              onChange={(e) => setIntro(e.target.value)}\n            />\n            <label htmlFor=\"intro\" className=\"active\">\n              Intro\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"verse\"\n              value={verse}\n              onChange={(e) => setVerse(e.target.value)}\n            />\n            <label htmlFor=\"verse\" className=\"active\">\n              Verse\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"chorus\"\n              value={chorus}\n              onChange={(e) => setChorus(e.target.value)}\n            />\n            <label htmlFor=\"chorus\" className=\"active\">\n              Chorus\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"'#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect green btn\"\n        > ENTER</a>\n      </div>\n    </div>\n  );\n};\nEditSongModal.propTypes = {\n  addSong: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { updateSong })(EditSongModal);\n"]},"metadata":{},"sourceType":"module"}