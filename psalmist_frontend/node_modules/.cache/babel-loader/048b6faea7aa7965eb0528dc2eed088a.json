{"ast":null,"code":"var _jsxFileName = \"/Users/joselaro/Documents/Documents - Jose\\u2019s MacBook Pro (2)/J.Laro/the-psalmist-app/psalmist_frontend/client/src/songs/Songs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport SongItem from './SongItem';\nimport PropTypes from 'prop-types';\nimport { getSongs, setLoading } from '../actions/songs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Songs = ({\n  song: {\n    songs,\n    loading\n  },\n  getSongs,\n  addSong\n}) => {\n  _s();\n\n  useEffect(() => {\n    getSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection with-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), !loading && songs.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center\",\n        children: \"You have no songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '48%',\n          paddingBottom: '5%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#add-log-modal\",\n          className: \"btn-floating green darken-1 modal-trigger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            children: \"note_add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 100\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : songs.map(song => /*#__PURE__*/_jsxDEV(SongItem, {\n      song: song\n    }, song.songId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 46\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Songs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Songs;\nSongs.propTypes = {\n  song: PropTypes.object.isRequired,\n  getSongs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  song: state.song\n});\n\nexport default connect(mapStateToProps, {\n  getSongs\n})(Songs);\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/joselaro/Documents/Documents - Joseâ€™s MacBook Pro (2)/J.Laro/the-psalmist-app/psalmist_frontend/client/src/songs/Songs.js"],"names":["React","useEffect","connect","SongItem","PropTypes","getSongs","setLoading","Songs","song","songs","loading","addSong","length","marginLeft","paddingBottom","map","songId","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,kBAAnC;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR;AAA4BL,EAAAA,QAA5B;AAAsCM,EAAAA;AAAtC,CAAD,KAAqD;AAAA;;AAE/DV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIK,CAACK,OAAD,IAAYD,KAAK,CAACG,MAAN,KAAiB,CAA7B,gBAAkC;AAAA,mCAAG;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,eAC/B;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,KAAd;AAAqBC,UAAAA,aAAa,EAAE;AAApC,SAAZ;AAAA,+BACI;AAAG,UAAA,IAAI,EAAC,gBAAR;AAAyB,UAAA,SAAS,EAAC,2CAAnC;AAAA,iCAA+E;AAAG,YAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAD+B;AAAA,oBAAlC,GAGYL,KAAK,CAACM,GAAN,CAAWP,IAAD,iBAAU,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB,OAA2BA,IAAI,CAACQ,MAAhC;AAAA;AAAA;AAAA;AAAA,YAApB,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAnBD;;GAAMT,K;;KAAAA,K;AAqBNA,KAAK,CAACU,SAAN,GAAkB;AACdT,EAAAA,IAAI,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UADT;AAEdd,EAAAA,QAAQ,EAAED,SAAS,CAACgB,IAAV,CAAeD;AAFX,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADkB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACmB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,KAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport SongItem from './SongItem'\nimport PropTypes from 'prop-types'\nimport {getSongs, setLoading} from '../actions/songs'\n\nconst Songs = ({ song: { songs, loading }, getSongs, addSong }) => {\n    \n    useEffect(() => {\n        getSongs()\n    }, [])\n\n\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h4 className=\"center\">Songs</h4>\n            </li>\n            {!loading && songs.length === 0 ? (<> <p className='center'>You have no songs</p>\n                <div style={{ marginLeft: '48%', paddingBottom: '5%' }}>\n                    <a href='#add-log-modal' className='btn-floating green darken-1 modal-trigger'><i className='material-icons'>note_add</i></a>\n            </div></>): (songs.map((song) => <SongItem song={song} key={song.songId}/>))}\n                \n        </ul>\n    )\n}\n\nSongs.propTypes = {\n    song: PropTypes.object.isRequired,\n    getSongs: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    song: state.song\n})\n\nexport default connect(mapStateToProps, { getSongs })(Songs);\n"]},"metadata":{},"sourceType":"module"}