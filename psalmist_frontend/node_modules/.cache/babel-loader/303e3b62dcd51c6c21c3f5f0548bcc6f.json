{"ast":null,"code":"import { GET_SONGS, SET_LOADING, SONGS_ERROR, ADD_SONG, DELETE_SONG, UPDATE_SONG, CLEAR_CURRENT, SET_CURRENT } from \"../actions/types\";\nconst initialState = {\n  songs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_SONGS:\n      return { ...state,\n        songs: payload,\n        loading: false\n      };\n\n    case ADD_SONG:\n      return { ...state,\n        songs: [...state.songs, payload],\n        loading: false\n      };\n\n    case UPDATE_SONG:\n      return { ...state,\n        songs: state.songs.map(song => song.id = payload.id ? payload : song),\n        loading: false\n      };\n\n    case DELETE_SONG:\n      return { ...state,\n        songs: state.song.filter(song => song.songId !== payload),\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        songs: payload\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case SONGS_ERROR:\n      return { ...state,\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/joselaro/Documents/Documents - Joseâ€™s MacBook Pro (2)/J.Laro/the-psalmist-app/psalmist_frontend/client/src/reducers/songReducer.js"],"names":["GET_SONGS","SET_LOADING","SONGS_ERROR","ADD_SONG","DELETE_SONG","UPDATE_SONG","CLEAR_CURRENT","SET_CURRENT","initialState","songs","current","loading","error","state","action","type","payload","map","song","id","filter","songId"],"mappings":"AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,aAPF,EAQEC,WARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKf,SAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,KAAK,EAAEO,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKR,QAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBO,OAAjB,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,GAAZ,CACJC,IAAD,IAAWA,IAAI,CAACC,EAAL,GAAUH,OAAO,CAACG,EAAR,GAAaH,OAAb,GAAuBE,IADvC,CAFF;AAKLP,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKP,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACK,IAAN,CAAWE,MAAX,CAAmBF,IAAD,IAAUA,IAAI,CAACG,MAAL,KAAgBL,OAA5C,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,KAAK,EAAEO;AAFF,OAAP;;AAIF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,OAAO,EAAEM;AAFJ,OAAP;;AAIF,SAAKV,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKR,WAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELD,QAAAA,KAAK,EAAEI;AAFF,OAAP;;AAIF;AACE,aAAOH,KAAP;AAlDJ;AAoDD,CAvDD","sourcesContent":["import {\n  GET_SONGS,\n  SET_LOADING,\n  SONGS_ERROR,\n  ADD_SONG,\n  DELETE_SONG,\n  UPDATE_SONG,\n  CLEAR_CURRENT,\n  SET_CURRENT,\n} from \"../actions/types\";\n\nconst initialState = {\n  songs: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_SONGS:\n      return {\n        ...state,\n        songs: payload,\n        loading: false,\n      };\n\n    case ADD_SONG:\n      return {\n        ...state,\n        songs: [...state.songs, payload],\n        loading: false,\n      };\n    case UPDATE_SONG:\n      return {\n        ...state,\n        songs: state.songs.map(\n          (song) => (song.id = payload.id ? payload : song)\n        ),\n        loading: false,\n      };\n    case DELETE_SONG:\n      return {\n        ...state,\n        songs: state.song.filter((song) => song.songId !== payload),\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        songs: payload,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n\n    case SONGS_ERROR:\n      return {\n        ...state,\n        error: payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}