{"ast":null,"code":"var _jsxFileName = \"/Users/joselaro/Documents/Documents - Jose\\u2019s MacBook Pro (2)/J.Laro/the-psalmist-app/psalmist_frontend/client/src/songs/Songs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport SongItem from \"./SongItem\";\nimport PropTypes from \"prop-types\";\nimport { getSongs } from \"../actions/songs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Songs = ({\n  song: {\n    songs,\n    loading\n  },\n  getSongs\n}) => {\n  _s();\n\n  useEffect(() => {\n    getSongs(); //eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection with-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), !loading && songs.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center\",\n        children: \"You have no songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"48%\",\n          paddingBottom: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#add-log-modal\",\n          className: \"btn-floating green darken-1 modal-trigger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            children: \"note_add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : songs.map(song => /*#__PURE__*/_jsxDEV(SongItem, {\n      song: song\n    }, song.songId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Songs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Songs;\nSongs.propTypes = {\n  song: PropTypes.object.isRequired,\n  getSongs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  song: state.song\n});\n\nexport default connect(mapStateToProps, {\n  getSongs\n})(Songs);\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/joselaro/Documents/Documents - Joseâ€™s MacBook Pro (2)/J.Laro/the-psalmist-app/psalmist_frontend/client/src/songs/Songs.js"],"names":["React","useEffect","connect","SongItem","PropTypes","getSongs","Songs","song","songs","loading","length","marginLeft","paddingBottom","map","songId","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR;AAA4BJ,EAAAA;AAA5B,CAAD,KAA4C;AAAA;;AACxDJ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ,GADI,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIG,CAACI,OAAD,IAAYD,KAAK,CAACE,MAAN,KAAiB,CAA7B,gBACC;AAAA,iBACG,GADH,eAEE;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,KAAd;AAAqBC,UAAAA,aAAa,EAAE;AAApC,SAAZ;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,gBADP;AAEE,UAAA,SAAS,EAAC,2CAFZ;AAAA,iCAIE;AAAG,YAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADD,GAcCJ,KAAK,CAACK,GAAN,CAAWN,IAAD,iBAAU,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB,OAA2BA,IAAI,CAACO,MAAhC;AAAA;AAAA;AAAA;AAAA,YAApB,CAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7BD;;GAAMR,K;;KAAAA,K;AA+BNA,KAAK,CAACS,SAAN,GAAkB;AAChBR,EAAAA,IAAI,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UADP;AAEhBZ,EAAAA,QAAQ,EAAED,SAAS,CAACc,IAAV,CAAeD;AAFT,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADsB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport SongItem from \"./SongItem\";\nimport PropTypes from \"prop-types\";\nimport { getSongs } from \"../actions/songs\";\n\nconst Songs = ({ song: { songs, loading }, getSongs }) => {\n  useEffect(() => {\n      getSongs();\n      //eslint-disable-next-line\n  }, []);\n\n  return (\n    <ul className=\"collection with-header\">\n      <li className=\"collection-header\">\n        <h4 className=\"center\">Songs</h4>\n      </li>\n      {!loading && songs.length === 0 ? (\n        <>\n          {\" \"}\n          <p className=\"center\">You have no songs</p>\n          <div style={{ marginLeft: \"48%\", paddingBottom: \"5%\" }}>\n            <a\n              href=\"#add-log-modal\"\n              className=\"btn-floating green darken-1 modal-trigger\"\n            >\n              <i className=\"material-icons\">note_add</i>\n            </a>\n          </div>\n        </>\n      ) : (\n        songs.map((song) => <SongItem song={song} key={song.songId} />)\n      )}\n    </ul>\n  );\n};\n\nSongs.propTypes = {\n  song: PropTypes.object.isRequired,\n  getSongs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  song: state.song,\n});\n\nexport default connect(mapStateToProps, { getSongs })(Songs);\n"]},"metadata":{},"sourceType":"module"}